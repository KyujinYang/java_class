package controller;

import java.util.Map;

import service.BoardService;
import service.UserService;
import util.ScanUtil;
import util.View;

public class Controller {

	public static void main(String[] args) {
		/*
		 * 발표순서: 조 소개> 주제 소개> 주제 선정 배경> 메뉴 구조 > 시연 > 소감
		 * 발표인원: 발표자 1명, ppt 및 시연 도우미 1명
		 * 
		 * 
		 * ======================================
		 * Controller: 화면 이동
		 * Service: 화면 기능
		 * Dao: 쿼리작성(Data Access Object)
		 * ======================================
		 * 시작일: 03/30 발표일: 04/05
		 * 설계:~2일
		 * 어떤 주제를 가지고 할는지:
		 * 주제 선정이유 
		 * 메뉴 구조
		 * ppt안에도 소감 넣기
		 * -------------------------------------
		 */
		//main메소드에선 전역변수 사용하기 힘들다 사용시 static 붙이기
		new Controller().start(); //객체생성 후 start 메소드 만들기
	}
	
	public static Map<String, Object> LoginUser; //변수만들어 로그인할 때 마다 저장 게시판 글 쓸 때 회원id를 LoginUser변수에서 가져온다.
	private BoardService boardService = BoardService.getInstance();
	private UserService userService = UserService.getInstance();
	
	
	private void start() {
		//static 붙이지 않고 메소드를 편하게 사용하기 위해 위에서 객체생성 후 사용
		//리턴: 모든 메소드가 끝나면 사용(다음화면 이동 시)
		//화면에 대한 내용은 상수를 만들어 이름 사용 util Package> View(상수로 모든 화면 정의) 1번화면: 이름1 2번화면: 이름2
		
		//start메소드 실행
		int view = View.HOME;
		
		while(true){//반복하며 다음화면 이동해야하기 때문에 while 사용
			switch (view){
				case View.HOME : view = home(); break; //home();메서드 만들기
				case View.LOGIN :view = userService.login(); break; //호출
				case View.JOIN: view = userService.login(); break;
				case View.BOARD_LIST : view = boardService.boardList(); break;
			}
		}
	}
	private int home(){
		System.out.println("-------------------------");
		System.out.println("1.로그인\t2.회원가입\t0.프로그램 종료");
		System.out.println("-------------------------");
		System.out.println("번호 입력> ");
		
		int input = ScanUtil.nextInt();
		
		switch (input) {
		case 1: //로그인
			return View.LOGIN;
			//break;//return시 종료되기에 break;를 써주면 컴파일에러발생
		case 2: //회원가입
			return View.JOIN;
		case 0://프로그램 종료
			System.out.println("프로그램이 종료되었습니다");
			System.exit(0);//파라미터로 날리는 이유는 종료되는 원인을 남겨주는 것임. 크게 의미x
		}
		return View.HOME; //사용자가 1,2,0번을 입력하지 않는 경우(잘못숫자입력한경우)
						  //다시 HOME화면(현재화면)으로 리턴되기에 처음부터 시작되어 반복
	}
}

//회원테이블만들기
//회원가입-SERVICE (화면 기능구현)
